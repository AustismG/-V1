<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.task.mapper.NoticeMapper">

    <resultMap id="getNoticeVO" type="com.example.task.vo.NoticeVO">
        <result property="publisherName" column="employee_name"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <resultMap id="getHaveReadCountVO" type="com.example.task.vo.HaveReadCountVO">
        <result property="employeeName" column="employee_name"/>
        <result property="employeeDepName" column="dep_name"/>
        <result property="readTime" column="read_time"/>

    </resultMap>
    <insert id="adminInsert">
        insert into salary_system.t_notice(title, content, receiver_dep_id_list, notice_status, publisher_id)
        values (#{title}, #{content}, #{receiverDepIdStr}, #{noticeStatus}, #{publisherId})
    </insert>

    <update id="update">
        update salary_system.t_notice
        <set>
            <if test="title != null">
                title = #{title}
            </if>
            <if test="content != null">
                content = #{content}
            </if>
        </set>
        where notice_id = #{noticeId}
    </update>

    <update id="updateNoticeStatus">
        update salary_system.t_notice
        set notice_status = #{status}
        where notice_id = #{noticeId}
    </update>

    <update id="updateReceiverDepIdList">
        update salary_system.t_notice
        set receiver_dep_id_list = #{originalReceiverDepIdList}
        where notice_id = #{noticeId};
    </update>

    <delete id="delete">
        delete
        from salary_system.t_notice
        where notice_id = #{noticeId}
    </delete>

    <select id="getNoticeList" resultMap="getNoticeVO">
        select title,content,employee_name,t1.create_time
        from salary_system.t_notice t1 INNER JOIN salary_system.t_employee t2 ON t1.publisher_id = t2.employee_id
        <where>
            <if test="noticeId != null">
                notice_id = #{noticeId}
            </if>
            <if test="title != null">
                title like "%"#{title}"%"
            </if>
            <if test="content != null">
                content like "%"#{content}"%"
            </if>
            <if test="startDate != null and endDate != null">
                create_time between #{startDate} and #{endDate}
            </if>
            and t1.publisher_id = #{publisherId}
        </where>
    </select>

    <select id="getNoticeIdByTitle" resultType="java.lang.Long">
        select notice_id
        from salary_system.t_notice
        where title = #{title}
    </select>

    <select id="getReceiverDepIdList" resultType="java.lang.String">
        select receiver_dep_id_list
        from salary_system.t_notice
        where notice_id = #{noticeId}
    </select>

    <select id="getHaveReadCountVO" resultMap="getHaveReadCountVO">
        select employee_name, dep_name, read_time
        from (salary_system.t_notice_receive t1 inner join salary_system.t_employee t2 on t1.receiver_id = t2.employee_id)
                 inner join salary_system.t_department t3 on t2.dep_id = t3.dep_id
        where t1.notice_id = #{noticeId}
          and t1.notice_status = 1
    </select>
</mapper>
