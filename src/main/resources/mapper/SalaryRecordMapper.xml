<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.task.mapper.SalaryRecordMapper">
    <resultMap id="getSearchRecordVo" type="com.example.task.vo.SalaryRecordVO">
        <id property="recordId" column="record_id"/>
        <result property="postPay" column="post_pay"/>
        <result property="performancePay" column="performance_pay"/>
        <result property="standingPay" column="standing_pay"/>
        <result property="allowance" column="allowance"/>
        <result property="eeId" column="e_id"/>
        <result property="personalIncomeTax" column="personal_income_tax"/>
    </resultMap>

    <resultMap id="getSalaryRecordPoById" type="com.example.task.po.SalaryRecordPO">
        <id property="recordId" column="record_id"/>
        <result property="postPay" column="post_pay"/>
        <result property="performancePay" column="performance_pay"/>
        <result property="standingPay" column="standing_pay"/>
        <result property="allowance" column="allowance"/>
        <result property="personalIncomeTax" column="personal_income_tax"/>
        <result property="wageDay" column="wage_day"/>
        <result property="eeId" column="e_id"/>
    </resultMap>


    <insert id="insert">
        insert into salary_system.t_salary_record(e_id, post_pay, performance_pay, standing_pay, allowance,
                                                  personal_income_tax, wage_day)
        values (#{eeId}, #{postPay}, #{performancePay}, #{standingPay}, #{allowance}, #{personalIncomeTax}, #{wageDay})
    </insert>

    <update id="update">
        update salary_system.t_salary_record
        <set>
            <if test="postPay != null">
                post_pay = #{postPay},
            </if>
            <if test="performancePay != null">
                performance_pay = #{performancePay},
            </if>
            <if test="standingPay != null">
                standing_pay = #{standingPay},
            </if>
            <if test="allowance != null">
                allowance = #{allowance},
            </if>
            <if test="modifiedTax != null">
                personal_income_tax = #{modifiedTax}
            </if>
        </set>
        where record_id = #{recordId}
    </update>

    <delete id="delete">
        delete from salary_system.t_salary_record
        where record_id in (
        <foreach collection="list" separator="," item="recordId">
            #{recordId}
        </foreach>
        )
    </delete>

    <select id="getRecordDateById" resultType="java.lang.String">
        select wage_day
        from salary_system.t_salary_record
        where record_id = #{recordId}
    </select>

    <select id="getRecordList" resultMap="com.example.task.mapper.SalaryRecordMapper.getSearchRecordVo">
        select record_id,post_pay,performance_pay,standing_pay,allowance,personal_income_tax,wage_day,e_id
        from salary_system.t_salary_record
        <where>
            <if test="recordId != null">
                record_id = #{recordId}
            </if>
            <if test="postPay != null">
                post_pay = #{postPay}
            </if>
            <if test="performancePay != null">
                performance_pay = #{performancePay}
            </if>
            <if test="standingPay != null">
                standing_pay = #{standingPay}
            </if>
            <if test="allowance != null">
                allowance = #{allowance}
            </if>
            <if test="startDate != null and endDate != null">
                wage_day between startDate and endDate
            </if>
        </where>
    </select>

    <select id="getTaxByMonth" resultType="java.math.BigDecimal">
        select personal_income_tax
        from salary_system.t_salary_record
        where MONTH(wage_day) = #{month}
    </select>

    <select id="getSalaryRecordPo" resultMap="getSalaryRecordPoById">
        select record_id,
               post_pay,
               performance_pay,
               standing_pay,
               allowance,
               personal_income_tax,
               wage_day,
               e_id,
               (post_pay + performance_pay + standing_pay + allowance) income
        from salary_system.t_salary_record
        where record_id = #{recordId}
    </select>
</mapper>
